# -*- coding: utf-8 -*-
"""Task-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-ztZKSqh5IVUBYC6fFSKw-VDOGiOL2s1
"""

from google.colab import drive
drive.mount('/content/drive')

#Basic Libraries
import numpy as np
import pandas as pd
from warnings import filterwarnings
from collections import Counter

# Visualizations Libraries
import matplotlib.pyplot as plt
import seaborn as sns
import plotly
import plotly.offline as pyo
import plotly.express as px
import plotly.graph_objects as go

from plotly.subplots import make_subplots
import plotly.figure_factory as ff
import missingno as msno

# Data Pre-processing Libraries
from sklearn.preprocessing import StandardScaler,MinMaxScaler
from sklearn.model_selection import train_test_split

# Modelling Libraries
from sklearn.linear_model import LogisticRegression,RidgeClassifier,SGDClassifier,PassiveAggressiveClassifier
from sklearn.linear_model import Perceptron
from sklearn.svm import SVC,LinearSVC,NuSVC
from sklearn.neighbors import KNeighborsClassifier,NearestCentroid
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier,GradientBoostingClassifier
from sklearn.naive_bayes import GaussianNB,BernoulliNB
from sklearn.ensemble import VotingClassifier

# Evaluation & CV Libraries
from sklearn.metrics import precision_score,accuracy_score
from sklearn.model_selection import RandomizedSearchCV,GridSearchCV,RepeatedStratifiedKFold
from sklearn.metrics import r2_score,mean_squared_error

colors_blue = ["#132C33", "#264D58", '#17869E', '#51C4D3', '#B4DBE9']
colors_red = ["#900C3F", "#C70039", '#FF5733', '#FFC300', '#DAF7A6']
colors_dark= ["#32174d","#5B0888",'#713ABE','#9D76C1','#E5CFF7']
sns.palplot(colors_blue)
sns.palplot(colors_dark)
sns.palplot(colors_red)

df=pd.read_csv('/content/drive/MyDrive/AspireNex/iris.csv')

df.head()

df.size,df.shape

df.info()

df.isnull().sum()

sns.histplot(data = df, x = "sepal_length",color=colors_dark[3])

sns.histplot(data = df, x = "sepal_width",color=colors_dark[1])

sns.lineplot(x="sepal_length", y="sepal_width", data=df)
plt.show()

sns.histplot(data = df, x = "petal_length",color=colors_blue[1])

sns.histplot(data = df, x = "petal_width",color=colors_blue[2])

sns.lineplot(x="petal_length", y="petal_width", data=df)
plt.show()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
label = le.fit_transform(df['species'])
df.drop("species", axis=1, inplace=True)
df["species"] = label

# Correlation Heatmap Visualization Code
corr_matrix = data.corr()

# Plot Heatmap
plt.figure(figsize=(8, 4))
sns.heatmap(corr_matrix, annot=True, cmap='Reds_r')

# Setting Labels
plt.title('Correlation Matrix heatmap')

# Display Chart
plt.show()

plt.figure(figsize=(9,5))
sns.heatmap(df.corr(), annot = True, fmt='.2g',cmap= 'BrBG')
plt.plot()

